basePath: /api
definitions:
  domain.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        description: 本当はハッシュ化して扱う想定
        type: string
      updatedAt:
        type: string
    type: object
  handler.ErrorResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: シンプルなユーザー管理API（Gin + GORM + JWT）
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Go User App API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: 登録されている全ユーザーを取得
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: ユーザー一覧取得
      tags:
      - users
    post:
      consumes:
      - application/json
      description: ユーザー情報を登録します。
      parameters:
      - description: ユーザー情報
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: ユーザーの新規作成
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: 指定されたIDのユーザーを削除します。
      parameters:
      - description: ユーザーID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: invalid ID
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: ユーザーの削除
      tags:
      - users
    get:
      consumes:
      - application/json
      description: 指定されたIDのユーザー情報を取得します。
      parameters:
      - description: ユーザーID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: invalid ID
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: ユーザーの取得
      tags:
      - users
    put:
      consumes:
      - application/json
      description: 指定されたIDのユーザー情報を更新します。
      parameters:
      - description: ユーザーID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新するユーザー情報
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: invalid request or ID
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - BearerAuth: []
      summary: ユーザー情報の更新
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: 'JWT形式: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
